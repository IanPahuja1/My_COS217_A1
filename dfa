outside_comment (accept) <-- start state
        / : first_slash (do nothing)
        ' : character_literal (print ')
        " : string_literal (print ")
        \n: outside_comment (print \n then increment line number)
        else: outside_comment (print char)

inside_comment (reject)
        * : second_astrick (do nothing)
        \n: inside_comment (print \n then increment line number)
        EOF: inside_comment (write error)
        else: inside_comment (do nothing)

first_slash (accept)
        * : inside_comment (print space; update comment start line)
        ' : character_literal (print / then print ')
        " : string_literal (print / then print ")
        / : first_slash (print /)
        \n: outside_comment (print / then print \n then increment line number)
        EOF: outside_comment (print /)
        else: outside_comment (print / then print char)

second_astrick (reject)
        / : outside_comment (do nothing)
        * : second_astrick (do nothing)
        \n: inside_comment (print \n then increment line number)
        EOF: second_astrick (write error)
        else: inside_comment (do nothing)

character_literal (accept)
        ' : outside_comment (print ')
        \ : escaped_character_in_character_literal (print \)
        / : character_literal (print /)
        \n: character_literal (print \n then increment line number)
        else: character_literal (print char)

string_literal (accept)
        " : outside_comment (print ")
        \ : escaped_character_in_string_literal (print \)
        / : string_literal (print /)
        \n: string_literal (print \n then increment line number)
        else: string_literal (print char)

escaped_character_in_character_literal (accept)
        \n: character_literal (print \n then increment line number)
        else: character_literal (print char)

escaped_character_in_string_literal (accept)
        \n: string_literal (print \n then increment line number)
        else: string_literal (print char)